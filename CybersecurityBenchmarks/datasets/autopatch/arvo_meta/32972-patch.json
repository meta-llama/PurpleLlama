[
  {
    "filename": "rdppm.c",
    "patched_line_numbers": [
      730,
      731
    ],
    "patch": "-727,6 +727,8 @@ start_input_ppm(j_compress_ptr cinfo, cjpeg_source_ptr sinfo)\n       (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_IMAGE,\n                                   (size_t)(((long)MAX(maxval, 255) + 1L) *\n                                            sizeof(JSAMPLE)));\n+    MEMZERO(source->rescale, (size_t)(((long)MAX(maxval, 255) + 1L) *\n+                                      sizeof(JSAMPLE)));\n     half_maxval = maxval / 2;\n     for (val = 0; val <= (long)maxval; val++) {\n       /* The multiplication here must be done in 32 bits to avoid overflow */",
    "summary": "commit b1079002ad451aab896617098b6bcbaae1d967e4\nAuthor: DRC <information@libjpeg-turbo.org>\nDate:   Wed Apr 7 15:51:05 2021 -0500\n\n    rdppm.c: Fix innocuous MSan error\n    \n    A fuzzing test case that was effectively a 1-pixel PGM file with a\n    maximum value of 1 and an actual value of 8 caused an uninitialized\n    member of the rescale[] array to be accessed in get_gray_rgb_row() or\n    get_gray_cmyk_row().  Since, for performance reasons, those functions do\n    not perform bounds checking on the PPM values, we need to ensure that\n    unused members of the rescale[] array are initialized.\n"
  }
]