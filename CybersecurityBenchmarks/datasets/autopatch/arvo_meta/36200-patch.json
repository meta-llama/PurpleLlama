[
  {
    "filename": "src/libopensc/card-piv.c",
    "patched_line_numbers": [
      616,
      1033,
      1612,
      1754,
      1915,
      2080,
      2312,
      2315,
      2368,
      2369,
      2371,
      2372,
      2373,
      2374,
      2377,
      2378,
      2379,
      2382,
      2383,
      2386,
      2387,
      2389,
      2403,
      2404,
      2405,
      2406,
      2407,
      2412,
      2413,
      2415,
      2433,
      2434,
      2435,
      2436,
      2438,
      2439,
      2440,
      2441,
      2442,
      2443,
      2444,
      2445,
      2447,
      2448,
      2449,
      2450,
      2451,
      2455,
      2456,
      2458,
      2459
    ],
    "patch": "@@ -608,14 +608,12 @@ static int piv_generate_key(sc_card_t *card,\n \t\tconst u8 *cp;\n \t\tkeydata->exponent = 0;\n \n-\t\t/* expected tag is 7f49.  */\n-\t\t/* we will whatever tag is present */\n-\n \t\tcp = rbuf;\n \t\tin_len = r;\n \n+\t\t/* expected tag is 0x7f49,returned as cla_out == 0x60 and tag_out = 0x1F49 */\n \t\tr = sc_asn1_read_tag(&cp, in_len, &cla_out, &tag_out, &in_len);\n-\t\tif (cp == NULL) {\n+\t\tif (cp == NULL || in_len == 0 || cla_out != 0x60 || tag_out != 0x1f49) {\n \t\t\tr = SC_ERROR_ASN1_OBJECT_NOT_FOUND;\n \t\t}\n \t\tif (r != SC_SUCCESS) {\n@@ -1032,7 +1030,7 @@ piv_cache_internal_data(sc_card_t *card, int enumtag)\n \t\t\tpriv->obj_cache[enumtag].obj_len,\n \t\t\t0x53, &bodylen);\n \n-\tif (body == NULL)\n+\tif (body == NULL || priv->obj_cache[enumtag].obj_data[0] != 0x53)\n \t\tLOG_FUNC_RETURN(card->ctx, SC_ERROR_OBJECT_NOT_VALID);\n \n \t/* get the certificate out */\n@@ -1611,7 +1609,7 @@ static int piv_general_mutual_authenticate(sc_card_t *card,\n \t/* Remove the encompassing outer TLV of 0x7C and get the data */\n \tbody = sc_asn1_find_tag(card->ctx, rbuf,\n \t\tr, 0x7C, &body_len);\n-\tif (!body) {\n+\tif (!body || rbuf[0] != 0x7C) {\n \t\tsc_debug(card->ctx, SC_LOG_DEBUG_VERBOSE, \"Invalid Witness Data response of NULL\\n\");\n \t\tr =  SC_ERROR_INVALID_DATA;\n \t\tgoto err;\n@@ -1753,7 +1751,7 @@ static int piv_general_mutual_authenticate(sc_card_t *card,\n \t/* Remove the encompassing outer TLV of 0x7C and get the data */\n \tbody = sc_asn1_find_tag(card->ctx, rbuf,\n \t\tr, 0x7C, &body_len);\n-\tif(!body) {\n+\tif(!body || rbuf[0] != 0x7C) {\n \t\tsc_debug(card->ctx, SC_LOG_DEBUG_VERBOSE, \"Could not find outer tag 0x7C in response\");\n \t\tr =  SC_ERROR_INVALID_DATA;\n \t\tgoto err;\n@@ -1914,7 +1912,7 @@ static int piv_general_external_authenticate(sc_card_t *card,\n \t/* Remove the encompassing outer TLV of 0x7C and get the data */\n \tbody = sc_asn1_find_tag(card->ctx, rbuf,\n \t\tr, 0x7C, &body_len);\n-\tif (!body) {\n+\tif (!body || rbuf[0] != 0x7C) {\n \t\tsc_debug(card->ctx, SC_LOG_DEBUG_VERBOSE, \"Invalid Challenge Data response of NULL\\n\");\n \t\tr =  SC_ERROR_INVALID_DATA;\n \t\tgoto err;\n@@ -2079,7 +2077,7 @@ piv_get_serial_nr_from_CHUI(sc_card_t* card, sc_serial_number_t* serial)\n \tr = SC_ERROR_INTERNAL;\n \tif (rbuflen != 0) {\n \t\tbody = sc_asn1_find_tag(card->ctx, rbuf, rbuflen, 0x53, &bodylen); /* Pass the outer wrapper asn1 */\n-\t\tif (body != NULL && bodylen != 0) {\n+\t\tif (body != NULL && bodylen != 0 && rbuf[0] == 0x53) {\n \t\t\tfascn = sc_asn1_find_tag(card->ctx, body, bodylen, 0x30, &fascnlen); /* Find the FASC-N data */\n \t\t\tguid = sc_asn1_find_tag(card->ctx, body, bodylen, 0x34, &guidlen);\n \n@@ -2311,10 +2309,10 @@ static int piv_validate_general_authentication(sc_card_t *card,\n \tpiv_private_data_t * priv = PIV_DATA(card);\n \tint r, tmplen, tmplen2;\n \tu8 *p;\n-\tconst u8 *tag;\n+\tconst unsigned char *p2;\n \tsize_t taglen;\n-\tconst u8 *body;\n \tsize_t bodylen;\n+\tunsigned int cla, tag;\n \tunsigned int real_alg_id, op_tag;\n \n \tu8 sbuf[4096]; /* needs work. for 3072 keys, needs 384+10 or so */\n@@ -2367,20 +2365,28 @@ static int piv_validate_general_authentication(sc_card_t *card,\n \n \tr = piv_general_io(card, 0x87, real_alg_id, priv->key_ref,\n \t\t\tsbuf, p - sbuf, rbuf, sizeof rbuf);\n+\tif (r < 0)\n+\t\tgoto err;\n \n-\tif (r >= 0) {\n-\t\tbody = sc_asn1_find_tag(card->ctx, rbuf, r, 0x7c, &bodylen);\n-\t\tif (body) {\n-\t\t\ttag = sc_asn1_find_tag(card->ctx, body,  bodylen, 0x82, &taglen);\n-\t\t\tif (tag) {\n-\t\t\t\tmemcpy(out, tag, taglen);\n-\t\t\t\tr = taglen;\n-\t\t\t} else\n-\t\t\t\tr = SC_ERROR_INVALID_DATA;\n-\t\t} else\n-\t\t\tr = SC_ERROR_INVALID_DATA;\n+\tp2 = rbuf;\n+\tr = sc_asn1_read_tag(&p2, r, &cla, &tag, &bodylen);\n+\tif (p2 == NULL || r < 0 || bodylen == 0 || (cla|tag) != 0x7C) {\n+\t\tLOG_TEST_GOTO_ERR(card->ctx, SC_ERROR_INVALID_DATA, \"Can't find 0x7C\");\n+        }\n+\n+\tr = sc_asn1_read_tag(&p2, bodylen, &cla, &tag, &taglen);\n+\tif (p2 == NULL || r < 0 || taglen == 0 || (cla|tag) != 0x82) {\n+\t\tLOG_TEST_GOTO_ERR(card->ctx, SC_ERROR_INVALID_DATA, \"Can't find 0x82\");\n \t}\n \n+\tif (taglen > outlen) {\n+\t\tLOG_TEST_GOTO_ERR(card->ctx, SC_ERROR_INVALID_DATA, \"data read longer then buffer\");\n+\t}\n+\n+\tmemcpy(out, p2, taglen);\n+\tr = taglen;\n+\n+err:\n \tLOG_FUNC_RETURN(card->ctx, r);\n }\n \n@@ -2394,19 +2400,19 @@ piv_compute_signature(sc_card_t *card, const u8 * data, size_t datalen,\n \tint i;\n \tsize_t nLen;\n \tu8 rbuf[128]; /* For EC conversions  384 will fit */\n-\tconst u8 * body;\n-\tsize_t bodylen;\n-\tconst u8 * tag;\n-\tsize_t taglen;\n+\tconst unsigned char *pseq, *pint, *ptemp, *pend;\n+\tunsigned int cla, tag;\n+\tsize_t seqlen;\n+\tsize_t intlen;\n+\tsize_t templen;\n \n \tSC_FUNC_CALLED(card->ctx, SC_LOG_DEBUG_VERBOSE);\n \n \t/* The PIV returns a DER SEQUENCE{INTEGER, INTEGER}\n-\t * Which may have leading 00 to force positive\n-\t * TODO: -DEE should check if PKCS15 want the same\n-\t * But PKCS11 just wants 2* filed_length in bytes\n+\t * Which may have leading 00 to force a positive integer\n+\t * But PKCS11 just wants 2* field_length in bytes\n \t * So we have to strip out the integers\n-\t * if present and pad on left if too short.\n+\t * and pad on left if too short.\n \t */\n \n \tif (priv->alg_id == 0x11 || priv->alg_id == 0x14 ) {\n@@ -2424,32 +2430,34 @@ piv_compute_signature(sc_card_t *card, const u8 * data, size_t datalen,\n \t\tif (r < 0)\n \t\t\tgoto err;\n \n-\t\tbody = sc_asn1_find_tag(card->ctx, rbuf, r, 0x30, &bodylen);\n-\n-\t\tfor (i = 0; i<2; i++) {\n-\t\t\tif (body) {\n-\t\t\t\ttag = sc_asn1_find_tag(card->ctx, body,  bodylen, 0x02, &taglen);\n-\t\t\t\tif (tag) {\n-\t\t\t\t\tbodylen -= taglen - (tag - body);\n-\t\t\t\t\tbody = tag + taglen;\n-\n-\t\t\t\t\tif (taglen > nLen) { /* drop leading 00 if present */\n-\t\t\t\t\t\tif (*tag != 0x00) {\n-\t\t\t\t\t\t\tr = SC_ERROR_INVALID_DATA;\n-\t\t\t\t\t\t\tgoto err;\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\ttag++;\n-\t\t\t\t\t\ttaglen--;\n-\t\t\t\t\t}\n-\t\t\t\t\tmemcpy(out + nLen*i + nLen - taglen , tag, taglen);\n-\t\t\t\t} else {\n+\t\tpseq = rbuf;\n+\t\tr = sc_asn1_read_tag(&pseq, r, &cla, &tag, &seqlen);\n+\t\tif (pseq == NULL || r < 0 || seqlen == 0 || (cla|tag) != 0x30)\n+\t\t\tLOG_TEST_GOTO_ERR(card->ctx, SC_ERROR_INVALID_DATA, \"Can't find 0x30\");\n+\n+\t\tpint = pseq;\n+\t\tpend = pseq + seqlen;\n+\t\tfor (i = 0; i < 2; i++) {\n+\t\t\tr = sc_asn1_read_tag(&pint, (pend - pint), &cla, &tag, &intlen);\n+\t\t\tif (pint == NULL || r < 0 || intlen == 0 || (cla|tag) != 0x02)\n+\t\t\t\tLOG_TEST_GOTO_ERR(card->ctx, SC_ERROR_INVALID_DATA, \"Can't find 0x02\");\n+\t\t\tif (intlen > nLen + 1)\n+\t\t\t\tLOG_TEST_GOTO_ERR(card->ctx, SC_ERROR_INVALID_DATA,\"Signature too long\");\n+\n+\t\t\tptemp = pint;\n+\t\t\ttemplen = intlen;\n+\t\t\tif (intlen > nLen) { /* drop leading 00 if present */\n+\t\t\t\tif (*ptemp != 0x00) {\n+\t\t\t\t\tLOG_TEST_GOTO_ERR(card->ctx, SC_ERROR_INVALID_DATA,\"Signature too long\");\n \t\t\t\t\tr = SC_ERROR_INVALID_DATA;\n \t\t\t\t\tgoto err;\n \t\t\t\t}\n-\t\t\t} else  {\n-\t\t\t\tr = SC_ERROR_INVALID_DATA;\n-\t\t\t\tgoto err;\n+\t\t\t\tptemp++;\n+\t\t\t\ttemplen--;\n \t\t\t}\n+\t\t\tmemcpy(out + nLen*i + nLen - templen , ptemp, templen);\n+\t\t\tpint += intlen; /* next integer */\n+\t\t\t\n \t\t}\n \t\tr = 2 * nLen;\n \t} else { /* RSA is all set */"
  }
]